<%- include("../partials/userheader") %>
    <style>
        .disabled {
            pointer-events: none;
            opacity: 0.5;

        }
    </style>
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Your Cart
                </div>
            </div>
        </div>

        <section class="mt-50 mb-50">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table class="table shopping-summery text-center clean">
                                <thead>
                                    <tr class="main-heading">
                                        <th scope="col">Image</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">Price</th>
                                        <th scope="col">Quantity</th>
                                        <th scope="col">Subtotal</th>
                                        <th scope="col">Remove</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (cart && cart.products && cart.products.length > 0) { %>
                                        <% cart.products.forEach(cartItem => { %>
                                            <% if (cartItem.productId && cartItem.productId.images &&
                                                cartItem.productId.name && cartItem.productId.description &&
                                                cartItem.productId.price) { %>
                                                <tr>
                                                    <td class="image product-thumbnail">
                                                        <img src="/productimages/<%= cartItem.productId.images[0] %>"
                                                            alt="<%= cartItem.productId.name %>">
                                                    </td>
                                                    <td class="product-des product-name">
                                                        <h5 class="product-name"><a
                                                                href="/products/<%= cartItem.productId._id %>">
                                                                <%= cartItem.productId.name %>
                                                            </a></h5>
                                                        <p class="font-xs">
                                                            <%= cartItem.productId.description %>
                                                        </p>
                                                    </td>
                                                    <td class="price" data-title="Price">
                                                        <% if (cartItem.productId.afterdiscount) { %>
                                                            <span>₹<%= cartItem.productId.afterdiscount %></span>
                                                        <% } else { %>
                                                            <span>₹<%= cartItem.productId.price %></span>
                                                        <% } %>
                                                    </td>
                                                    <td class="text-center" data-title="Quantity">
                                                        <div class="detail-qty border radius m-auto">
                                                            <a href="#"
                                                                class="qty-down"
                                                                data-id="<%= cartItem.productId._id %>">
                                                                <i class="fi-rs-angle-small-down"></i>
                                                            </a>
                                                            <span class="qty-val"
                                                                id="qty-val-<%= cartItem.productId._id %>">
                                                                 <%= cartItem.quantity %>
                                                            </span>
                                                            <a href="#"
                                                                class="qty-up "
                                                                data-id="<%= cartItem.productId._id %>">
                                                                <i class="fi-rs-angle-small-up"></i>
                                                            </a>
                                                        </div>
                                                    </td>
                                                    <td class="text-right" data-title="Cart">
                                                        <span id="subtotal-<%= cartItem.productId._id %>">
                                                            ₹<%= (cartItem.productId.afterdiscount ?
                                                            cartItem.productId.afterdiscount : cartItem.productId.price) *
                                                            cartItem.quantity %>
                                                        </span>
                                                    </td>
                                                    <td class="action" data-title="Remove">
                                                        <a href="#" class="delete-item"
                                                            data-id="<%= cartItem.productId._id %>"><i
                                                                class="fi-rs-trash"></i></a>
                                                    </td>
                                                </tr>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="6">Product data is incomplete or missing</td>
                                                </tr>
                                            <% } %>
                                        <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="6">Cart is empty</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                                
                            </table>
                        </div>
                        <div class="cart-action text-end">
                            <a href="shop" class="btn"><i class="fi-rs-shopping-bag mr-10"></i>Continue Shopping</a>
                        </div>
                        <div class="divider center_icon mt-50 mb-50"><i class="fi-rs-fingerprint"></i></div>
                    </div>
                </div>
            </div>
        </section>


        <section class="mt-50 mb-50">
    <div class="container">
        <div class="row">
            <!-- Coupon Section -->
            <div class="col-lg-6 col-md-12">
                <!-- Your coupon code form goes here -->
            </div>

            <div class="col-lg-6 col-md-12">
                <div class="border p-md-4 p-30 border-radius cart-totals">
                    <div class="heading_s1 mb-3">
                        <h4>Cart Totals</h4>
                    </div>
                    <div class="table-responsive">
                        <table class="table">
                            <tbody>
                               
                                <tr>
                                    <td class="cart_total_label">Total</td>
                                    <td class="cart_total_amount" id="cartTotalDisplay">
                                        <strong>
                                            ₹ <span id="cartTotalValue"></span>
                                        </strong>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <button id="checkoutBtn" data-cart-id="<%=cart.id %>" class="btn"><i class="fi-rs-box-alt mr-10"></i> Proceed To Checkout</button>
                </div>
            </div>
        </div>
    </div>
</section>


    </main>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const qtyDownButtons = document.querySelectorAll('.qty-down');
        const qtyUpButtons = document.querySelectorAll('.qty-up');

        qtyDownButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                const productId = this.getAttribute('data-id');
                updateQuantity(productId, 'down');
            });
        });

        qtyUpButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                const productId = this.getAttribute('data-id');
                updateQuantity(productId, 'up');
            });
        });
    });

    async function updateQuantity(productId, action) {
        const qtyValElement = document.getElementById('qty-val-' + productId);
        let currentQuantity = parseInt(qtyValElement.textContent);

        let newQuantity;
        if (action === 'up') {
            newQuantity = currentQuantity + 1;
        } else if (action === 'down' && currentQuantity > 1) {
            newQuantity = currentQuantity - 1;
        } else {
            return;
        }

        qtyValElement.textContent = newQuantity;
        console.log(qtyValElement.textContent,'leeejooo')

        const url = `/cart/update-quantity/${productId}/${newQuantity}`;
        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();
            console.log('Quantity updated:', data);

            if (!data.cart || !data.cart.products || !data.updatedProduct) {
                console.error('Invalid data format in response:', data);
                return;
            }

            const updatedProduct = data.updatedProduct;
            console.log(updatedProduct,'jillgook')
            console.log( data.quantityitem,'item quantity')

            const qtyValElement = document.getElementById('qty-val-' + productId);
qtyValElement.textContent = data.quantityitem;


            // Calculate new subtotal
            const newSubtotal = (updatedProduct.quantity * (updatedProduct.productId.afterdiscount ? updatedProduct.productId.afterdiscount : updatedProduct.productId.price)).toFixed(2);
            const subtotalElement = document.getElementById('subtotal-' + productId); 
            if (subtotalElement) {
                subtotalElement.textContent = '₹' + newSubtotal;
            }

            // Update cart total
            let cartTotal = 0;
            data.cart.products.forEach(item => {
                cartTotal += item.quantity * (item.productId.afterdiscount ? item.productId.afterdiscount : item.productId.price);
            });
            const cartTotalElement = document.getElementById('cart-total');
            if (cartTotalElement) {
                cartTotalElement.textContent =  + cartTotal.toFixed(2);
            }

            // Handle stock availability
            if (newQuantity == updatedProduct.countinstock) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Out of Stock',
                    text: 'The quantity you selected exceeds the available stock.',
                });

                

                // Disable increase quantity button
                const qtyUpButton = document.querySelector(`.qty-up[data-id="${productId}"]`);
                if (qtyUpButton) {
                    qtyUpButton.classList.add('disabled');
                    qtyUpButton.disabled = true;
                }
            }
  
            // Update cart totals
            const cartTotals = document.getElementById('cartTotalValue');
            if (cartTotals) {
                cartTotals.textContent =   + cartTotal.toFixed(2);
            }

            // Handle product out of stock
            if (updatedProduct.countinstock === newQuantity ) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Product Out of Stock',
                    text: 'This product is currently out of stock.',
                });
                // Disable add to cart button or perform other actions as needed
                const addToCartButton = document.querySelector(`.button-add-to-cart[data-id="${productId}"]`);
                if (addToCartButton) {
                    addToCartButton.disabled = true;
                }
                return;
            }

            if (newQuantity === 10) {
            Swal.fire({
                icon: 'info',
                title: 'Maximum Quantity Reached',
                text: 'You can only add up to 10 items of this product.',
            });
            const qtyUpButton = document.querySelector(`.qty-up[data-id="${productId}"]`);
            if (qtyUpButton) {
                qtyUpButton.classList.add('disabled');
                qtyUpButton.disabled = true;
            }
        } else {
            // Enable the increase quantity button when decreasing
            const qtyUpButton = document.querySelector(`.qty-up[data-id="${productId}"]`);
            if (qtyUpButton) {
                qtyUpButton.classList.remove('disabled');
                qtyUpButton.disabled = false;
            }
        }

        } catch (error) {
            console.error('Error updating quantity:', error);
            qtyValElement.textContent = currentQuantity;
        }
    }
</script>


    <script>
    // Function to update cart total dynamically without page refresh
    function updateCartTotal() {
        fetch('/api/getCartTotal') 
            .then(response => response.json())
            .then(data => {
                const cartTotalValue = document.getElementById('cartTotalValue');
                console.log(cartTotalValue,"mannnivilla")
                if (cartTotalValue) {
                    cartTotalValue.textContent = data.cartTotal.toFixed(2); 
                }
            })
            .catch(error => console.error('Error fetching cart total:', error));
    }

    
    document.addEventListener('DOMContentLoaded', () => {
        updateCartTotal();
    });
</script>






    <script>


        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-item');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    const productId = this.getAttribute('data-id');
                    deleteCartItem(productId);
                });
            });
        });

        async function deleteCartItem(productId) {
            const url = `/cart/delete/${productId}`;
            try {
                const response = await fetch(url, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();
                console.log('Item deleted:', data);

                // Remove the deleted product from the cart view without reloading the page
                const deletedProductElement = document.querySelector(`[data-id="${productId}"]`);
                if (deletedProductElement) {
                    deletedProductElement.closest('tr').remove(); 
                    window.location.reload()
                }

                // Update other cart details like total, subtotal, etc.
                const cartTotalElement = document.getElementById('cart-total');
                if (cartTotalElement) {
                    cartTotalElement.textContent = '₹' + data.cart.total.toFixed(2);
                }

               

            } catch (error) {
                console.error('Error deleting item:', error);
            }
        }



    </script>





    <script>
        // Handle checkout button click
        document.addEventListener('DOMContentLoaded', function() {
            const checkoutBtn = document.getElementById('checkoutBtn');
            
            if (checkoutBtn) {
                checkoutBtn.addEventListener('click', async function(e) {
                    e.preventDefault();
                    const cartId = this.getAttribute('data-cart-id');
                    
                    try {
                        // Try to navigate to checkout page
                        const response = await fetch(`/checkout/${cartId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        
                        if (response.ok) {
                            // If successful, redirect to checkout page
                            window.location.href = `/checkout/${cartId}`;
                        } else {
                            // If error, parse the JSON response
                            const data = await response.json();
                            
                            // Show SweetAlert with error message
                            Swal.fire({
                                icon: 'warning',
                                title: 'Address Required',
                                text: data.error || 'Please add a delivery address before proceeding to checkout.',
                                confirmButtonText: 'Add Address',
                                showCancelButton: true,
                                cancelButtonText: 'Cancel'
                            }).then((result) => {
                                if (result.isConfirmed && data.redirect) {
                                    // Redirect to profile page to add address
                                    window.location.href = data.redirect;
                                }
                            });
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong. Please try again.'
                        });
                    }
                });
            }
        });
    </script>

    <%- include("../partials/userfooter") %>